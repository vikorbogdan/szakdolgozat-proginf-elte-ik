generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  email     String   @unique
  name      String?
  role      Role     @default(USER)
  image     String?
  lessons   Lesson[] @relation("UserToLesson")
  blocks    Block[]  @relation("UserToBlock")
  groups    Group[]  @relation("UserToGroup")
}

model Group {
  id          String   @id @default(cuid())
  name        String
  description String
  icon        String // emoji
  lessons     Lesson[] @relation("GroupToLesson")
  blocks      Block[]  @relation("GroupToBlock")
  users       User[]   @relation("UserToGroup")
}

model Lesson {
  id          String        @id @default(cuid())
  title       String
  files       File[]
  users       User[]        @relation("UserToLesson")
  groups      Group[]       @relation("GroupToLesson")
  LessonBlock LessonBlock[]
}

model Block {
  id          String        @id @default(cuid())
  title       String
  content     String?
  duration    Int
  users       User[]        @relation("UserToBlock")
  groups      Group[]       @relation("GroupToBlock")
  LessonBlock LessonBlock[]
}

model File {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  path      String
  lessonId  String?
  lesson    Lesson?  @relation(fields: [lessonId], references: [id])
}

model LessonBlock {
  id       String @id @default(cuid())
  lesson   Lesson @relation(fields: [lessonId], references: [id])
  lessonId String
  block    Block  @relation(fields: [blockId], references: [id])
  blockId  String
  order    Int // Field to store the order of the block in the lesson
  instance Int // Field to handle multiple instances of the same block

  @@unique([lessonId, blockId, instance])
}

enum Role {
  USER
  ADMIN
}
